import { CallableRequest, onCall } from "firebase-functions/v2/https";
import { firestore, messaging } from "firebase-admin";
import { initializeApp } from "firebase-admin/app";

initializeApp();

// Example function to send notifications
type RequestBody = { displayName: string; message: string; uid: string };

// todo - replace w/ a DB call to get a random message
const generateRandomMessage = (displayName: string) => {
  const messages = [
    `${displayName} deserves it ðŸ¥¹`,
    "You didnâ€™t just Hundy P; you demolished the P and made it your bitch. Respect! (generated by Chad lol)",
    "Great success!!",
  ];
  return messages[Math.floor(Math.random() * messages.length)];
};

// Cloud Function to send notifications and save event to Firestore
exports.sendNotification = onCall(
  async ({
    data: { displayName, message, uid },
  }: CallableRequest<RequestBody>) => {
    const missingFields = [];
    if (!uid) missingFields.push("uid");
    if (!displayName) missingFields.push("displayName");

    if (missingFields.length > 0) {
      return {
        success: false,
        message: `The following fields are missing: ${missingFields.join(", ")}`,
      };
    }
    const body = message != null ? message : generateRandomMessage(displayName);
    const pushNotificationMessage = {
      notification: {
        title: `${displayName} just Hundy P'd!`,
        body,
      },
    };

    try {
      // Get all tokens from Firestore collection
      const tokensSnapshot = await firestore()
        .collection("pushNotificationTokens")
        .get();
      const tokens = tokensSnapshot.docs.map((doc) => doc.data().fcmToken);

      if (tokens.length === 0) {
        console.log("No tokens available.");
        return {
          success: false,
          message: "No tokens found, unable to send Hundy P.",
        };
      }

      // Save the event to Firestore
      const eventDocRef = firestore().collection("hundyPEvents").doc();
      await eventDocRef.set({
        uid, // User ID
        message: body, // Message sent
        timestamp: firestore.FieldValue.serverTimestamp(), // Server-generated timestamp
      });
      console.log(`Saved Hundy P event to Firestore: ${eventDocRef.id}`);

      // Send a notification to all tokens
      const response = await messaging().sendEachForMulticast({
        ...pushNotificationMessage,
        tokens,
      });

      console.log("Notifications sent:", response);
      return { success: true, message: "Notifications sent successfully." };
    } catch (error) {
      console.error("Error sending notifications:", error);
      return { success: false, message: "Error sending notifications." };
    }
  },
);
